generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) // Changed from Int to String UUID
  email     String   @unique
  name      String?
  password  String?  // Optional for OAuth users
  urls      Url[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Url {
  id          String   @id @default(cuid())
  originalUrl String
  shortCode   String   @unique
  userId      String?  // Changed from Int? to String?
  user        User?    @relation(fields: [userId], references: [id])
  clicks      Int      @default(0)
  createdAt   DateTime @default(now())
  expiresAt   DateTime?
  
  @@index([shortCode])  //Creates an index on the shortCode field-->shortCode is just a normal String field.This index helps speed up lookups
  @@index([userId])    
 //Creates an index on the userId foreign key.-->userId is part of a relation:Prisma already treats userId as a foreign key because of the @relation(...).
 //But @@index([userId]) explicitly tells the database to add an index on the userId field to optimize queries filtering by userId, like:
}